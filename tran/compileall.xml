<?xml version="1.0" encoding="Latin-1"?>
<categoria>strumenti dello sviluppatore</categoria><!-- # tag <descrizione> contiene le voci per la tabella di riepilogo iniziale -->
<!-- # tag <titolo_1> titolo principale -->
<!-- tag <testo_normale> contiene il testo normale dell'articolo -->
<!-- tag <titolo_2> contiene il testo per l'intestazione di un paragrafo -->
<!-- tag <py_code> contiene il testo che rappresenta delle istruzioni python -->
<!-- tag <py_output> contiene il testo che rappresenta l'output di uno script python -->
<!-- tag <vedi_anche> contiene il testo che rappresentano i riferimenti esterni -->
<!-- tag <lista> ogni riga all'interno del tag rappresenta una riga di una lista non ordinata'-->
<documento_tradotto>
<titolo_1>
compileall - Compila in Byte-code di File Sorgente
</titolo_1>
<descrizione>
Converte i file sorgenti nella versione compilata byte-code

</descrizione>
<testo_normale>
Il modulo <strong>compileall</strong> Cerca file sorgente Python e li compila nella rappresentazione byte-code, salvando il risultato in file con estensione <code>.pyc</code>
</testo_normale>
<titolo_2>
Compilare Una Directory
</titolo_2>
<testo_normale>
<code>compile_dir()</code> viene usato per scorrere ricorsivamente una directory e compilare in <a href='https://www.wikiwand.com/it/Bytecode' target='_blank'>byte-code</a> i file in essa contenuti.
</testo_normale>
<py_code>
# compileall_compile_dir.py
</py_code>
<testo_normale>
Nella modalità predefinita, vengono esaminate tutte le sottodirectory fino ad una profondità di 10. I file in uscita sono scritti nella directory <code>__pycache__</code> e nominati in base alla versione dell'interprete Python.
</testo_normale>
<py_output>
$ python3 compileall_compile_dir.py
</py_output>
<titolo_2>
Ignorare i File
</titolo_2>
<testo_normale>
Per escludere delle directory, si usi l'argomento <code>rx</code> per fornire una espressione regolare per trovare corrispondenza con i nomi da escludere.
</testo_normale>
<vedi_anche>
https://docs.python.org/3.5/library/trace.html|trace|La documentazione della libreria standard per questo modulo.
#|Tracciare un programma in fase di esecuzione|Il modulo sys include servizi per aggiungere una funzione di tracciatura personalizzata all'interprete in fase di esecuzione (in corso di traduzione)
http://nedbatchelder.com/code/modules/coverage.html|coverage.py|Il modulo coverage di Neil Batchelder.
http://darcs.idyll.org/~t/projects/figleaf/doc/|figleaf|L'applicazione di copertura di Titus Brown
</vedi_anche>
</documento_tradotto>
